using System;

namespace ASN1CoreFxTest
{
    class Program
    {
        static void Main(string[] args)
        {
            // Changes from corefx source:
            // 
            // AsnReader.AdvanceReader to skip over the tag after reading
            // Patch CheckExceptedTag to not care about the Universal tag.
            // Why?
            // Because of TryGetPrimitiveOctetStringBytes.
            //
            // The strings here are encoded as UniversalString,
            // which blows up in AsnCharacterStringEncoding.GetEncoding
            // Now, Kerberos strings are actually IA5String:
            // KerberosString  ::= GeneralString (IA5String)
            //
            // But if I do
            // reader.GetCharacterString(new Asn1Tag(UniversalTagNumber.GeneralString), KerberosTags.KerberosStringTag)
            // then CheckExceptedTag blows up.


            var bytes = new byte[] { 0x7e, 0x6a, 0x30, 0x68, 0xa0, 0x03, 0x02, 0x01, 0x05, 0xa1, 0x03, 0x02, 0x01, 0x1e, 0xa4, 0x11, 0x18, 0x0f, 0x32, 0x30, 0x31, 0x38, 0x30, 0x38, 0x30, 0x36, 0x32, 0x30, 0x33, 0x33, 0x30, 0x35, 0x5a, 0xa5, 0x05, 0x02, 0x03, 0x0d, 0xa5, 0x5f, 0xa6, 0x03, 0x02, 0x01, 0x34, 0xa9, 0x14, 0x1b, 0x12, 0x49, 0x4e, 0x54, 0x2e, 0x44, 0x45, 0x56, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x53, 0x2e, 0x4f, 0x52, 0x47, 0xaa, 0x27, 0x30, 0x25, 0xa0, 0x03, 0x02, 0x01, 0x02, 0xa1, 0x1e, 0x30, 0x1c, 0x1b, 0x06, 0x6b, 0x72, 0x62, 0x74, 0x67, 0x74, 0x1b, 0x12, 0x49, 0x4e, 0x54, 0x2e, 0x44, 0x45, 0x56, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x53, 0x2e, 0x4f, 0x52, 0x47 };

            var reader = new AsnReader(bytes, AsnEncodingRules.BER);
            var tag = reader.ReadTagAndLength(out var contentLength, out var bytesRead);
            reader = reader.AdvanceReader(bytesRead);

            if (tag == KerberosError.Id)
            {
                var krbError = new KerberosError(ref reader);
            }
        }
    }
}
